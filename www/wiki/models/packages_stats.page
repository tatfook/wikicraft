<?npl
--[[
Title: package stats
Author: Big
Date: 2016/102
]]

include_once("./abstract/base.page");

local packages_stats = inherit(models.abstract.base, gettable("models.packages_stats"));

packages_stats.db_name = 'packages_stats';

function packages_stats:ctor()
	
end

function packages_stats:recordCreate(projectType)
	log({"create"});
	newQuantity = 0;

	self:db():findOne({["+statsType+projectType"] = {"packageStats",projectType}},
		function(err, response)
			log({"response",response});
			if(response == nil) then

				self:db():insertOne(nil,{
					statsType   = 'packageStats',
					projectType = projectType,
					quantity    = 1;
				},
				function(err,data)
					--log(data);
					resume();
				end
				);
			else
				newQuantity = response.quantity + 1;

				self:db():updateOne(
					{
						["+statsType+projectType"] = {"packageStats",projectType}
					},{
						quantity  = newQuantity; 
					},
					function(err,data)
						resume();
					end
				);
			end
		end
	);
	yield();

	return true;
end

function packages_stats:recordDelete(projectType)
	log({"delete",projectType});

	self:db():findOne({["+statsType+projectType"] = {"packageStats",projectType}},
		function(err, response)
			log({"response",response});
			if(response ~= nil) then
				newQuantity = response.quantity - 1;

				self:db():updateOne(
					{
						["+statsType+projectType"] = {"packageStats",projectType},
					},{
						quantity  = newQuantity; 
					},
					function(err,data)
						resume();
					end
				);
			end
		end
	);
	yield();

	return true;
end

function packages_stats:recordDownload(projectType)
	local today = ParaGlobal.GetDateFormat("yyyy-MM-dd");

	local year,month,day = today:match("^([%d]+)-([%d]+)-([%d]+)$");

	self:db():findOne(
		{["+statsType+projectType"] = {"dayDownload",projectType}},
		function(err, response)
			log({"err",err});
			log({'response',response,})
			if (response == nil) then
				self:db():insertOne({
					statsType = 'dayDownload',
					quantity  = 1,
					today = today,
					projectType = projectType,
				},
				function(err,response)
					log({response});
					resume();
				end
				);
			else
				if(response.today == today) then
					self:db():updateOne({
						["+projectType+statsType+today"] = {projectType,"dayDownload",today},
					},
					{
						quantity = response.quantity+1
					},
					function(err,response)
						resume();
					end
					);
				else
					self:db():deleteOne({
						statsType = "dayDownload",
					},
					function(err,count)
						if(count == 1) then
							self:db():insertOne({
								statsType = 'dayDownload',
								quantity  = 1,
								today = today,
								projectType = projectType,
							},
							function(err,response)
								log({response});
								resume();
							end
							);
						else
							returnData = {result=-1,msg="Delete dayDownload fail"};
						end
					end
					);
				end
			end
		end
	);
	yield();

	self:db():findOne(
		{["+statsType+projectType"] = {"monthDownload",projectType}},
		function(err, response)
			if (response == nil) then
				self:db():insertOne({
					statsType = 'monthDownload',
					quantity  = 1,
					month = year..'-'..month,
					projectType = projectType,
				},
				function(err,response)
					log({response});
					resume();
				end
				);
			else
				if(response.month ==  year..'-'..month) then
					self:db():updateOne({
						["+projectType+statsType+month"] = {projectType,"monthDownload",year..'-'..month},
					},
					{
						quantity = response.quantity+1
					},
					function(err,response)
						resume();
					end
					);
				else
					self:db():deleteOne({
						statsType = "monthDownload",
					},
					function(err,count)
						if(count == 1) then
							self:db():insertOne({
								statsType = 'monthDownload',
								quantity  = 1,
								month = year..'-'..month,
								projectType = projectType,
							},
							function(err,response)
								log({response});
								resume();
							end
							);
						else
							returnData = {result=-1,msg="Delete monthDownload fail"};
						end
					end
					);
				end
			end
		end
	);
	yield();

	self:db():findOne(
		{["+statsType+projectType"] = {"yearDownload",projectType}},
		function(err, response)
			if (response == nil) then
				self:db():insertOne({
					statsType = 'yearDownload',
					quantity  = 1,
					year = year,
					projectType = projectType,
				},
				function(err,response)
					log({response});
					resume();
				end
				);
			else
				if(response.year == year) then
					self:db():updateOne({
						["+projectType+statsType+month"] = {projectType,"yearDownload",year},
					},
					{
						quantity = response.quantity+1,
					},
					function(err,response)
						resume();
					end
					);
				else
					self:db():deleteOne({
						statsType = "yearDownload",
					},
					function(err,count)
						if(count == 1) then
							self:db():insertOne({
								statsType = 'yearDownload',
								quantity  = 1,
								year = year,
								projectType = projectType,
							},
							function(err,response)
								log({response});
								resume();
							end
							);
						else
							returnData = {result=-1,msg="Delete yearDownload fail"};
						end
					end
					);
				end
			end
		end
	);
	yield();

	return true;
end

function packages_stats:getStats(param)
	local returnData = {};
	local stats = self:validate_stats(param);
	log({"stats",stats});

	if (not stats) then
		return {result=-1,msg="statsType or projectType is not set"};
	end

	self:db():findOne(
		{["+statsType+projectType"] = {stats.statsType,stats.projectType}},
		function(err,response)
			log({"getStats",response})

			if (response == nil) then
				returnData = {statsType = "nil"};
				resume();
			else
				returnData = response;
				resume();
			end
		end
	);

	yield();
	log({"returnData",returnData})
	return returnData;
end

function packages_stats:validate_stats(param)
	local stats = {};

	if(param.statsType == "packageStats") then
		stats.statsType = 'packageStats';

	elseif(param.statsType == "dayDownload") then
		stats.statsType = 'dayDownload';

	elseif(param.statsType == 'monthDownload') then
		stats.statsType = 'monthDownload';

	elseif(param.statsType == 'yearDownload') then
		stats.statsType = 'yearDownload';
	else
		return false;
	end

	if(param.projectType == "a") then
		stats.projectType = "a"
	
	elseif(param.projectType == "b") then
		stats.projectType = "b"

	else
		return false;
	end

	return stats;
end
