<?npl
--[[
Title: wiki module
Author: wuxiangan
Date: 2017/2/27
]]

include_once("./abstract/base.page")
include_once("user.page")

local test = inherit(models.abstract.base, gettable("models.test"))
local testDir = WIKI_ROOT .. "test/"

function test:api_helloworld(params)
	return "hello world"
end
 
-- 用户cdn测试api接口 返回一个自增id
function test:api_get()
	local testObj = KEEPWORK["mem_cache"]:get("test") or {}
	testObj.testApiId = (testObj.testApiId or 0) + 1
	KEEPWORK["mem_cache"]:set("test", testObj)

	return tostring(testObj.testApiId)	
end

function test:api_file(params)
	return sensitive_word_match(params.word)
end

function test:api_post(params)
	log("------------------test post-----------------")
	log(params)
	return params or {key="test"}
end

function test:api_getToken(params)
	return encodeJWT({userId=1}, 1000)
end
function test:api_token(params)
	local token = decodeJWT(params.token or "")
	log(token)

	return token
end

function test:api_qiniu()
	NPL.call("lib/libQiNiuPlugin.so", {cmd="getUploadToken", expires=1000000})
	log(msg)
end

-- 更新文件内容
function test:api_updateFileContent(params)
	if not params.filename then
		return "请求缺少参数"
	end
	local filename = testDir .. params.filename
	local file = ParaIO.open(filename, "w")
	if not file:IsValid() then
		return "打开文件失败"
	end

	local testObj = KEEPWORK["mem_cache"]:get("test") or {}
	testObj.testFileId = testObj.testFileId or {}
	testObj.testFileId[params.filename] = (testObj.testFileId[params.filename] or 0) + 1
	KEEPWORK["mem_cache"]:set("test", testObj)

	local fileContent = tostring(testObj.testFileId[params.filename])
	file:WriteString(fileContent)
	file:close()

	return fileContent
end


function test:api_test()
	local result = commonlib.Files.Find(nil,WIKI_ROOT .. 'js/mod', 4, 500, "config.page", nil)
	for _, value in ipairs(result) do
		include_once(WIKI_ROOT ..'js/mod/'.. value.filename)
	end
	return result
end

function test:api_echo(params)
	local userDB = models.user:new()
	userDB:db():find({username="xiaoyao",{"displayName", "wxatest"}}, resume)

	return errors:wrap(yield())
end

function test:api_sendEmail(params)
	local par = {}
	-- par.to = params.friendMail
	par.to = "765485868@qq.com"
	par.subject = "wikicraft好友邀请"
	par.body = [[
		<div class="main-content">
			<p>你好，你的好友#username#真诚的将 wikicraft 推荐给你。</p>
			<p>wikicraft 是一款强大的网站构建平台。</p>
			<p>#username#的作品：</p>
			<p><a href="#">作品链接</a></p>
			<p><a href="#">作品链接</a></p>
			<div class="btn">点击注册</div>
		</div>
	]]
	
	util:sendEmail(par)
end

function test:api_cookie(params)
	--response:set_cookie("key", "value")

	return "hello world"
end

function test:api_getCookie(params)
	log("-------------------------")
	log(request.headers.Cookie)
	local token =  request:get_cookie("token")
	log(token)

	return token	
end
