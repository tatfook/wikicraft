<?npl
--[[
Title: org member
Author: wuxiangan
Date: 2016/11/07
]]

include_once("./abstract/base.page");

local org_member = inherit(models.abstract.base, gettable("models.org_member"))
org_member.db_name="org_member"

function org_member:ctor()
	self:addfield("name", "string", true, 30)
	self:addfield("userId", "number", false)

	self:addfield("createDate", "string", false, 64);
	self:addfield("updateDate", "string", false, 64);
end


-- 获取组织成员
function org_member:api_getOrgMemberCount(params)
	if not params.websiteName then
		return {error=errors.REQUEST_PARAMS_ERROR, data=nil}
	end

	self:db():count({["+name"]={params.websiteName}}, resume)
	local err, data = yield()
	
	if err then
		return errors:wrap(err, data)
	end

	return {error=errors.SUCCESS, data=data}
end


-- 获取成员列表
function org_member:api_getOrgMemberList(params)
	if not params.websiteName then
		return {error=errors.REQUEST_PARAMS_ERROR, data=nil}
	end
	
	local page = params.page or 1
	local pageSize = params.pageSize  or 10
	local skip = (page - 1) * pageSize
	
	self:db():find({["+name"]={params.websiteName,limit=pageSize, skip=skip}}, resume)
	local err, userIdList = yield()

	if err then
		return errors:wrap(err, userIdList)
	end
	
	-- TODO 获取userDB对象
	local userInfoList = {}
	for _, userIdObj in ipairs(userIdList) do
		userDB:db():findOne([_id=userIdObj.userId], resume)
		err, userInfo = yield()
		userInfoList[#userInfoList+1] = userInfo	
	end
	
	return {error=errors.SUCCESS, data=userInfoList}
end

function org_member:create(params) 
	params.createDate = ParaGlobal.GetDateFormat("yyyy-MM-dd")
	params.updateDate = params.createDate

	self:db():insertOne(nil, params, resume)
	local err, data = yield()
	
	if err then
		return errors:wrap(err, data)
	end

	return {error=errors.SUCCESS, data=data}
end
