<?npl
--[[
Title: website of a user
Author: wuxiangan
Date: 2016/10/10
]]
include_once("./abstract/multi_user_base.page");
include_once("./website_pages.page");
-- include_once("./website_template_style.page");

local website = inherit(models.abstract.multi_user_base, gettable("models.website"));

website.db_name = "website";
-- max items per user
website.max_items_per_user = 10;

function website:ctor()
	self:addfield("name", "string", true, 30);
	self:addfield("desc", "string", false, 120);
	self:addfield("domain", "string", false, 30);
	self:addfield("url","string", true, 100);
	self:addfield("tags","string", false, 300);
	self:addfield("categoryId","number", false, nil, 1);
	self:addfield("categoryName","string", false, 32);
	self:addfield("templateId","number", false, nil, 1);
	self:addfield("templateName","string", false, 32);
	self:addfield("styleId","number", false, nil, 1);
	self:addfield("styleName","string", false, 32);
	self:addfield("keywords", "string", false, 100);
	self:addfield("teamwork", "string", false, 100);
	self:addfield("store", "string", false, 200);
	self:addfield("fork", "string", false, 200);
	self:addfield("createDate", "string", false, 64);
	self:addfield("updateDate", "string", false, 64);
	self:addfield("stars", "number");
	self:addfield("private", "number");
end

function website:get(params)
	self:db():find(params, resume);
	local err, data = yield();
	
	if err then
		return errors:wrap(err, data);
	end

	return {error=errors.SUCCESS, data=data};
end

function website:create(params) 
	params.createDate = ParaGlobal.GetDateFormat("yyyy-MM-dd");
	local site = self._super.create(self, params);	
	
	if not site then
		return {error=errors.REQUEST_PARAMS_ERROR, data=site}
	end

	return {error=errors.SUCCESS, data=site}
end

function website:delete(params) 
	local site = self:get(params);
	if (not site.data) or (not site.data[1]) then
		return self:get();
	end
	
	site = site.data[1]

	self._super.delete(self, params);
	local website_pages = models.website_pages:new();
	-- 删除该网站上所有页
	website_pages:db():delete({websiteName=site.name});

	return self:get();
end

function website:update(params) 
	params.updateDate = ParaGlobal.GetDateFormat("yyyy-MM-dd");
	self._super.update(self, params);
	return self:get();
end

